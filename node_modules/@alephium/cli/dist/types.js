"use strict";
/*
Copyright 2018 - 2022 The Alephium Authors
This file is part of the alephium project.

The library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

The library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with the library. If not, see <http://www.gnu.org/licenses/>.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEnv = exports.DEFAULT_CONFIGURATION_VALUES = void 0;
const web3_1 = require("@alephium/web3");
const utils_1 = require("./utils");
const project_1 = require("./project");
exports.DEFAULT_CONFIGURATION_VALUES = {
    sourceDir: project_1.Project.DEFAULT_CONTRACTS_DIR,
    artifactDir: project_1.Project.DEFAULT_ARTIFACTS_DIR,
    compilerOptions: web3_1.DEFAULT_COMPILER_OPTIONS,
    deployToMultipleGroupsInParallel: true,
    deploymentScriptDir: 'scripts',
    deploymentsDir: 'deployments',
    networkId: 'devnet',
    networks: {
        devnet: {
            networkId: 4,
            confirmations: 1,
            privateKeys: ['a642942e67258589cd2b1822c631506632db5a12aabcf413604e785300d762a5']
        },
        testnet: {
            networkId: 1,
            confirmations: 2
        },
        mainnet: {
            networkId: 0,
            confirmations: 2
        }
    },
    forceRecompile: false
};
// it's convenient for users to write scripts
function getEnv(configFileName, networkId) {
    const configFile = configFileName ? configFileName : (0, utils_1.getConfigFile)();
    const config = (0, utils_1.loadConfig)(configFile);
    const network = config.networks[networkId ?? exports.DEFAULT_CONFIGURATION_VALUES.networkId];
    web3_1.web3.setCurrentNodeProvider(network.nodeUrl);
    return {
        config: config,
        network: network,
        nodeProvider: web3_1.web3.getCurrentNodeProvider()
    };
}
exports.getEnv = getEnv;
